// Copyright 2015 gRPC authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";
package api;

service VirExOtcApi {
    //get exchange market aggr depth
    rpc getExMarketDepth (DepthInfo) returns (TradeInfos) {
    }
    //get otc market aggr depth
    rpc getOtcMarketDepth (DepthInfo) returns (TradeInfos) {
    }
    //get target exchange market depth
    rpc getMarketDepth (MarketInfo) returns (MarketInfoResult) {
    }
    //get target exchange account left
    rpc getAccountLeft (AssetInfo) returns (AssetResult) {
    }
    //create buy order on target exchange
    rpc createBuyOrder (OrderInfo) returns (OrderResult) {
    }
    //create sell order on target exchange
    rpc createSellOrder (OrderInfo) returns (OrderResult) {
    }
    //create buy order on target exchange
    rpc createBuyLimitMakerOrder (OrderInfo) returns (OrderResult) {
    }
    //create sell order on target exchange
    rpc createSellLimitMakerOrder (OrderInfo) returns (OrderResult) {
    }
    //cannel order on target exchange
    rpc cannelOrder (OrderDetail) returns (OrderDetailResult) {
    }
    //check order on target exchange
    rpc checkOrder (OrderDetail) returns (OrderDetailResult) {
    }
    //get history order info on target exchange
    rpc getOrdersMatchResult (OrderMatcher) returns (OrderMatcherResult) {
    }
    //get current orders info on target exchange
    rpc getCurrentOrders (CurrentOrder) returns (CurrentOrderResult) {
    }
    //get finished orders info on target exchange
    rpc getFinishedOrders (FinishedOrder) returns (FinishedOrderResult) {
    }
    //get kline info on target exchange
    rpc kline (KLine) returns (KLineResult) {
    }
    //get kline rsi index info on target exchange
    rpc klineRSI (KLineRSI) returns (KLineRSIResult) {
    }
    //get kline kdj index info on target exchange
    rpc klineKDJ (KLineKDJ) returns (KLineKDJResult) {
    }
    //get kline boll index info on target exchange
    rpc klineBOLL (KLineBOLL) returns (KLineBOLLResult) {
    }
    //get futuress market information on target exchange
    rpc futuresTicker (FuturesTicker) returns (FuturesTickerResult) {
    }
    //get depth information of futures market on target exchange
    rpc futuresDepth (FuturesDepth) returns (FuturesDepthResult) {
    }
    //get futures kline info on target exchange
    rpc futuresKLine (FuturesKLine) returns (FuturesKLineResult) {
    }
    //get futures kline rsi index info on target exchange
    rpc futuresKLineRSI (FuturesKLineRSI) returns (FuturesKLineRSIResult) {
    }
    //get futures kline kdj index info on target exchange
    rpc futuresKLineKDJ (FuturesKLineKDJ) returns (FuturesKLineKDJResult) {
    }
    //get kline boll index info on target exchange
    rpc futuresKLineBOLL (FuturesKLineBOLL) returns (FuturesKLineBOLLResult) {
    }
    //get futures index on target exchange
    rpc futuresIndex (FuturesIndex) returns (FuturesIndexResult) {
    }
    //get futures estimated price on target exchange
    rpc futuresEstimatedPrice (FuturesEstimatedPrice) returns (FuturesEstimatedPriceResult) {
    }
    //create buy/sell futures order on target exchange
    rpc futuresTrade (FuturesTrade) returns (FuturesTradeResult) {
    }
    //futures cancel order on target exchange
    rpc futuresCancel (FuturesCancel) returns (FuturesCancelResult) {
    }
    //futures batch cancel orders on target exchange
    rpc futuresBatchCancel (FuturesBatchCancel) returns (FuturesBatchCancelResult) {
    }
    //get futures order info on target exchange
    rpc futuresCheckOrder (FuturesCheckOrder) returns (FuturesCheckOrderResult) {
    }
    //get futures orders info on target exchange
    rpc futuresOrders (FuturesOrders) returns (FuturesOrdersResult) {
    }
    //get futures userInfo fix on target exchange
    rpc futuresUserInfoFix (FuturesUserInfoFix) returns (FuturesUserInfoFixResult) {
    }
    //get futures position fix on target exchage
    rpc futuresPositionFix (FuturesPositionFix) returns (FuturesPositionFixResult) {
    }
}

//交易所对应名称如下：
// huobi -> 火币
// okex -> Okex
// binance -> 币安
// bithumb -> 韩国bithumb

message DepthInfo {
    string symbol = 1;
    string limit = 2;
}
// The response message containing the trade infos
message TradeInfos {
    string coinId = 1;
    string tradeType = 2;
}

message MarketInfo {
    string symbol = 1;
    int32 limit = 2;
    string exchange = 3;
}
message MarketInfoResult {
    string result = 1;
}

message AssetInfo {
    string asset = 1;
    string exchange = 2;
    string accessKey = 3;
    string secretKey = 4;
    bool isCrypt = 5;
    string accountCode = 6;
    string accountType = 7;
}

message AssetResult {
    string left = 1;
}

message OrderInfo {
    string symbol = 1;
    double quantity = 2;
    double price = 3;
    string exchange = 4;
    string accessKey = 5;
    string secretKey = 6;
    bool isCrypt = 7;
    string accountCode = 8;
    string accountType = 9;
}

message OrderResult {
    string order = 1;
}

message OrderDetail {
    string symbol = 1;
    string order_id = 2;
    string exchange = 3;
    string accessKey = 4;
    string secretKey = 5;
    bool isCrypt = 6;
    string accountCode = 7;
}

message OrderDetailResult {
    string order_detail = 1;
}

message OrderMatcher {
    string symbol = 1;
    int64 begin = 2;
    int64 end = 3;
    string exchange = 4;
    string accessKey = 5;
    string secretKey = 6;
    bool isCrypt = 7;
    string accountCode = 8;
}

message OrderMatcherResult {
    string orders = 1;
}

message CurrentOrder {
    string symbol = 1;
    string exchange = 2;
    string accessKey = 3;
    string secretKey = 4;
    bool isCrypt = 5;
    string accountCode = 6;
}

message CurrentOrderResult {
    string orders = 1;
}

message FinishedOrder {
    string symbol = 1;
    string exchange = 2;
    int32 page = 3;
    int32 limit = 4;
    string accessKey = 5;
    string secretKey = 6;
    bool isCrypt = 7;
    string accountCode = 8;
}

message FinishedOrderResult {
    string orders = 1;
}

message KLine {
    string exchange = 1;
    string symbol = 2;
    string period = 3;
    int32 size = 4;
}

message KLineResult {
    string kline = 1;
}

message KLineRSI {
    string exchange = 1;
    string symbol = 2;
    string period = 3;
    int32 size = 4;
    repeated int32 timePeriods = 5; //such as 6, 12, 24, 7, 14, 28
}

message KLineRSIResult {
    string klineRSI = 1;
}

message KLineKDJ {
    string exchange = 1;
    string symbol = 2;
    string period = 3;
    int32 size = 4;
    int32 fastkPeriod = 5; //such as 9
}

message KLineKDJResult {
    string klineKDJ = 1;
}

message KLineBOLL {
    string exchange = 1;
    string symbol = 2;
    string period = 3;
    int32 size = 4;
}

message KLineBOLLResult {
    string klineBOOLResult = 1;
}

message FuturesTicker {
    string exchange = 1;
    string symbol = 2;
    string contractType = 3;
}

message FuturesTickerResult {
    string futuresTicker = 1;
}

message FuturesDepth {
    string exchange = 1;
    string symbol = 2;
    string contractType = 3;
    int32 limit = 4;
}

message FuturesDepthResult {
    string futuresDepth = 1;
}

message FuturesKLine {
    string exchange = 1;
    string symbol = 2;
    string period = 3;
    string contractType = 4;
    int32 size = 5;
}

message FuturesKLineResult {
    string futuresKLine = 1;
}

message FuturesKLineRSI {
    string exchange = 1;
    string symbol = 2;
    string period = 3;
    string contractType = 4;
    int32 size = 5;
    repeated int32 timePeriods = 6; //such as 6, 12, 24, 7, 14, 28
}

message FuturesKLineRSIResult {
    string futuresKLineRSI = 1;
}

message FuturesKLineKDJ {
    string exchange = 1;
    string symbol = 2;
    string period = 3;
    string contractType = 4;
    int32 size = 5;
    int32 fastkPeriod = 6; //such as 9
}

message FuturesKLineKDJResult {
    string futuresKLineKDJ = 1;
}

message FuturesKLineBOLL {
    string exchange = 1;
    string symbol = 2;
    string period = 3;
    string contractType = 4;
    int32 size = 5;
    int32 timePeriod = 6;
    int32 nbdevup = 7;
    int32 nbdevdn = 8;
}

message FuturesKLineBOLLResult {
    string futuresKLineBOLL = 1;
}

message FuturesIndex {
    string exchange = 1;
    string symbol = 2;
}

message FuturesIndexResult {
    string futuresIndex = 1;
}

message FuturesEstimatedPrice {
    string exchange = 1;
    string symbol = 2;
}

message FuturesEstimatedPriceResult {
    string futuresEstimatedPrice = 1;
}

message FuturesTrade {
    string exchange = 1;
    string symbol = 2;
    string contractType = 3;
    double price = 4;
    double amount = 5;
    int32 tradeType = 6;
    bool matchPrice = 7;
    int32 leverRate = 8;
    string accessKey = 9;
    string secretKey = 10;
    bool isCrypt = 11;
    string accountCode = 12;
}

message FuturesTradeResult {
    string futuresTrade = 1;
}

message FuturesCancel {
    string exchange = 1;
    string symbol = 2;
    string contractType = 3;
    string orderId = 4;
    string accessKey = 5;
    string secretKey = 6;
    bool isCrypt = 7;
    string accountCode = 8;
}

message FuturesCancelResult {
    string futuresCancel = 1;
}

message FuturesBatchCancel {
    string exchange = 1;
    string symbol = 2;
    string contractType = 3;
    repeated string orderIds = 4;
    string accessKey = 5;
    string secretKey = 6;
    bool isCrypt = 7;
    string accountCode = 8;
}

message FuturesBatchCancelResult {
    string futuresBatchCancel = 1;
}

message FuturesCheckOrder {
    string exchange = 1;
    string symbol = 2;
    string contractType = 3;
    string orderId = 4;
    string accessKey = 5;
    string secretKey = 6;
    bool isCrypt = 7;
    string accountCode = 8;
}

message FuturesCheckOrderResult {
    string futuresCheckOrder = 1;
}

message FuturesOrders {
    string exchange = 1;
    string symbol = 2;
    string contractType = 3;
    int32 orderStatus = 4;
    int32 currentPage = 5;
    int32 pageLength = 6;
    string accessKey = 7;
    string secretKey = 8;
    bool isCrypt = 9;
    string accountCode = 10;
}

message FuturesOrdersResult {
    string futuresOrders = 1;
}

message FuturesUserInfoFix {
    string exchange = 1;
    string asset = 2;
    string accessKey = 3;
    string secretKey = 4;
    bool isCrypt = 5;
    string accountCode = 6;
}

message FuturesUserInfoFixResult {
    string futuresUserInfoFix = 1;
}

message FuturesPositionFix {
    string exchange = 1;
    string symbol = 2;
    string contractType = 3;
    int32 type = 4;
    string accessKey = 5;
    string secretKey = 6;
    bool isCrypt = 7;
    string accountCode = 8;
}

message FuturesPositionFixResult {
    string futuresPositionFix = 1;
}